<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="tthesigan" failures="0" tests="5" name="testCases.TC002_SigninTest" time="7.972" errors="1" timestamp="2024-11-02T18:57:44 IST" skipped="4">
  <testcase classname="testCases.TC002_SigninTest" name="verifySignInFuntionality" time="0.000">
    <skipped/>
  </testcase> <!-- verifySignInFuntionality -->
  <testcase classname="testCases.TC002_SigninTest" name="verifySignInFuntionality" time="0.000">
    <skipped/>
  </testcase> <!-- verifySignInFuntionality -->
  <testcase classname="testCases.TC002_SigninTest" name="verifySignInFuntionality" time="0.000">
    <skipped/>
  </testcase> <!-- verifySignInFuntionality -->
  <testcase classname="testCases.TC002_SigninTest" name="setUp" time="7.972">
    <error message="An unknown server-side error occurred while processing the command. Original error: Potentially insecure feature &#039;adb_shell&#039; has not been enabled. If you want to enable this feature and accept the security ramifications, please do so by following the documented instructions at http://appium.io/docs/en/2.0/guides/security/
Build info: version: &#039;4.26.0&#039;, revision: &#039;8ccf0219d7&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;23&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [a41b4097-6e7c-46ec-9eb1-b109c7f08455, executeScript {args=[{command=pm grant com.example.deltatestapp android.permission.READ_EXTERNAL_STORAGE}], script=mobile: shell}]
Capabilities {appium:allowInsecure: adb_shell, appium:appActivity: com.example.deltatestapp.Ma..., appium:appPackage: com.example.deltatestapp, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {allowInsecure: adb_shell, appActivity: com.example.deltatestapp.Ma..., appPackage: com.example.deltatestapp, automationName: UiAutomator2, deviceName: myemulator, platformName: ANDROID, platformVersion: 14.0}, appium:deviceApiLevel: 34, appium:deviceManufacturer: Google, appium:deviceModel: sdk_gphone64_x86_64, appium:deviceName: emulator-5554, appium:deviceScreenDensity: 440, appium:deviceScreenSize: 1080x2220, appium:deviceUDID: emulator-5554, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 2.75, appium:platformVersion: 14, appium:statBarHeight: 66, appium:takesScreenshot: true, appium:viewportRect: {height: 2154, left: 0, top: 66, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: a41b4097-6e7c-46ec-9eb1-b109c7f08455" type="org.openqa.selenium.WebDriverException">
      <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Potentially insecure feature 'adb_shell' has not been enabled. If you want to enable this feature and accept the security ramifications, please do so by following the documented instructions at http://appium.io/docs/en/2.0/guides/security/
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [a41b4097-6e7c-46ec-9eb1-b109c7f08455, executeScript {args=[{command=pm grant com.example.deltatestapp android.permission.READ_EXTERNAL_STORAGE}], script=mobile: shell}]
Capabilities {appium:allowInsecure: adb_shell, appium:appActivity: com.example.deltatestapp.Ma..., appium:appPackage: com.example.deltatestapp, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {allowInsecure: adb_shell, appActivity: com.example.deltatestapp.Ma..., appPackage: com.example.deltatestapp, automationName: UiAutomator2, deviceName: myemulator, platformName: ANDROID, platformVersion: 14.0}, appium:deviceApiLevel: 34, appium:deviceManufacturer: Google, appium:deviceModel: sdk_gphone64_x86_64, appium:deviceName: emulator-5554, appium:deviceScreenDensity: 440, appium:deviceScreenSize: 1080x2220, appium:deviceUDID: emulator-5554, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 2.75, appium:platformVersion: 14, appium:statBarHeight: 66, appium:takesScreenshot: true, appium:viewportRect: {height: 2154, left: 0, top: 66, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: a41b4097-6e7c-46ec-9eb1-b109c7f08455
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:237)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:476)
at testBase.BaseClass.setUp(BaseClass.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- setUp -->
  <testcase classname="testCases.TC002_SigninTest" name="verifySignInFuntionality" time="0.000">
    <skipped/>
  </testcase> <!-- verifySignInFuntionality -->
</testsuite> <!-- testCases.TC002_SigninTest -->
